- id: SS_notifier
  alias: SS_notifier
  
  trigger:
    - platform: mqtt
      topic: socket_settings/notifier
    
  action:
    service: persistent_notification.create
    data:
      title: "{{ trigger.payload_json.title }}"
      message: "{{ trigger.payload_json.message }}"

- id: getHAID
  alias: getHAID
  trigger:
    - platform: mqtt
      topic: homeassistant/getHAID
  variables:
    HAID: >-
      {% from 'getHAID.jinja' import getHAID %}
      {{ getHAID(trigger.payload) }}
  action:
    - service: mqtt.publish
      data_template:
        topic: "homeassistant/HAID"
        payload: "{{ HAID }}"

- id: purgeDevices
  alias: purgeDevices
  trigger:
    - platform: mqtt
      topic: homeassistant/sensor/smartSocket/+/config
  variables:
    deviceID: "{{ trigger.topic.split('smartSocket/')[1].split('_')[0] }}"
  action:
    - if:
      - condition: and
        conditions: 
          - condition: template
            value_template: "{{ trigger.payload == '' }}"
          - condition: template
            value_template: "{{ deviceID[0] == 'd' }}"
      then:
        - service: recorder.purge_entities
          target:
            entity_id:
              - sensor.smart_socket_{{ deviceID }}_voltage
              - sensor.smart_socket_{{ deviceID }}_current
              - sensor.smart_socket_{{ deviceID }}_power
              - sensor.smart_socket_{{ deviceID }}_energy
              - sensor.smart_socket_{{ deviceID }}_left_plug
              - sensor.smart_socket_{{ deviceID }}_center_plug
              - sensor.smart_socket_{{ deviceID }}_right_plug
              - sensor.smart_socket_{{ deviceID }}_hourly_average
              - sensor.smart_socket_{{ deviceID }}_hourly_total
              - sensor.smart_socket_{{ deviceID }}_daily_average
              - sensor.smart_socket_{{ deviceID }}_daily_total
              - sensor.smart_socket_{{ deviceID }}_monthly_average
              - sensor.smart_socket_{{ deviceID }}_monthly_total
              - sensor.smart_socket_{{ deviceID }}_yearly_average
              - sensor.smart_socket_{{ deviceID }}_yearly_total

        - service: shell_command.delete_req
          data:
            reqUrl: "http://{{ states('sensor.local_ip') }}:8099/delDevice?deviceID={{ deviceID }}"
          response_variable: response

        - if:
          - condition: template
            value_template: "{{ not ('successful' in response['stdout']) }}"
          
          then:
            - service: persistent_notification.create
              data:
                title: "An error occured while deleting device"
                message: "{{ response }}"

        - delay: "00:00:03"

        
